<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Google/Ads/GoogleAds/Util/FieldMasks/Proto/tester.proto

namespace Google\Ads\GoogleAds\Util\FieldMasks\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.ads.googleads.util.fieldmasks.proto.Bar</code>
 */
class Bar extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 num = 1;</code>
     */
    protected $num = 0;
    /**
     * Generated from protobuf field <code>.google.protobuf.BoolValue nested_wrapper = 2;</code>
     */
    protected $nested_wrapper = null;
    /**
     * Generated from protobuf field <code>int32 nested_presence = 3;</code>
     */
    protected $nested_presence = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $num
     *     @type \Google\Protobuf\BoolValue $nested_wrapper
     *     @type int $nested_presence
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Ads\GoogleAds\Util\FieldMasks\Proto\Tester::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 num = 1;</code>
     * @return int|string
     */
    public function getNum()
    {
        return $this->num;
    }

    /**
     * Generated from protobuf field <code>int64 num = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setNum($var)
    {
        GPBUtil::checkInt64($var);
        $this->num = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.BoolValue nested_wrapper = 2;</code>
     * @return \Google\Protobuf\BoolValue
     */
    public function getNestedWrapper()
    {
        return isset($this->nested_wrapper) ? $this->nested_wrapper : null;
    }

    public function hasNestedWrapper()
    {
        return isset($this->nested_wrapper);
    }

    public function clearNestedWrapper()
    {
        unset($this->nested_wrapper);
    }

    /**
     * Returns the unboxed value from <code>getNestedWrapper()</code>

     * Generated from protobuf field <code>.google.protobuf.BoolValue nested_wrapper = 2;</code>
     * @return bool|null
     */
    public function getNestedWrapperUnwrapped()
    {
        return $this->readWrapperValue("nested_wrapper");
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.BoolValue nested_wrapper = 2;</code>
     * @param \Google\Protobuf\BoolValue $var
     * @return $this
     */
    public function setNestedWrapper($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\BoolValue::class);
        $this->nested_wrapper = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\BoolValue object.

     * Generated from protobuf field <code>.google.protobuf.BoolValue nested_wrapper = 2;</code>
     * @param bool|null $var
     * @return $this
     */
    public function setNestedWrapperUnwrapped($var)
    {
        $this->writeWrapperValue("nested_wrapper", $var);
        return $this;}

    /**
     * Generated from protobuf field <code>int32 nested_presence = 3;</code>
     * @return int
     */
    public function getNestedPresence()
    {
        return isset($this->nested_presence) ? $this->nested_presence : 0;
    }

    public function hasNestedPresence()
    {
        return isset($this->nested_presence);
    }

    public function clearNestedPresence()
    {
        unset($this->nested_presence);
    }

    /**
     * Generated from protobuf field <code>int32 nested_presence = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setNestedPresence($var)
    {
        GPBUtil::checkInt32($var);
        $this->nested_presence = $var;

        return $this;
    }

}

